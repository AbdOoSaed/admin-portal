import 'dart:async';
import 'dart:convert';
import 'dart:core';
import 'package:built_collection/built_collection.dart';
import 'package:invoiceninja_flutter/data/models/serializers.dart';
import 'package:invoiceninja_flutter/redux/auth/auth_state.dart';
import 'package:invoiceninja_flutter/data/models/models.dart';
import 'package:invoiceninja_flutter/data/web_client.dart';

class StubRepository {
  final WebClient webClient;

  const StubRepository({
    this.webClient = const WebClient(),
  });

  Future<StubEntity> loadItem(
      CompanyEntity company, AuthState auth, int entityId) async {
    final dynamic response = await webClient.get(
        '${auth.url}/stubs/$entityId', company.token);

    final StubItemResponse stubResponse =
        serializers.deserializeWith(StubItemResponse.serializer, response);

    return stubResponse.data;
  }

  Future<BuiltList<StubEntity>> loadList(
      CompanyEntity company, AuthState auth, int updatedAt) async {
    String url = auth.url + '/stubs';

    if (updatedAt > 0) {
      url += '&updated_at=${updatedAt - 600}';
    }

    final dynamic response = await webClient.get(url, company.token);

    final StubListResponse stubResponse =
        serializers.deserializeWith(StubListResponse.serializer, response);

    return stubResponse.data;
  }
}
